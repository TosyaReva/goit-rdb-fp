-- Task 1
CREATE SCHEMA pandemic;
USE pandemic; 
CREATE TABLE countries(
	country_id INT AUTO_INCREMENT PRIMARY KEY,
    entity VARCHAR(100) NOT NULL,
    code VARCHAR(10) NOT NULL,
    UNIQUE(entity, code)
);

INSERT INTO countries (entity, code)
SELECT DISTINCT  infectious_cases.entity, infectious_cases.code
FROM infectious_cases;

ALTER TABLE infectious_cases
ADD COLUMN id INT NOT NULL AUTO_INCREMENT PRIMARY KEY FIRST;

ALTER TABLE infectious_cases ADD COLUMN country_id INT;

SET SQL_SAFE_UPDATES = 0;

UPDATE infectious_cases ic
JOIN countries c ON ic.Entity = c.entity AND ic.Code = c.code
SET ic.country_id = c.country_id;

ALTER TABLE infectious_cases
DROP COLUMN entity,
DROP COLUMN code;

-- Task 2
ALTER TABLE infectious_cases
ADD CONSTRAINT fk_country
FOREIGN KEY (country_id) REFERENCES countries(country_id);

SELECT COUNT(*) FROM infectious_cases;

-- Task 3
SELECT countries.entity as country_name,
    MIN(Number_rabies) AS min_rabies,
    AVG(Number_rabies) AS avg_rabies,
    MAX(Number_rabies) AS max_rabies,
    SUM(Number_rabies) AS sum_rabies
FROM infectious_cases
JOIN countries ON infectious_cases.country_id = countries.country_id
WHERE LENGTH(Number_rabies ) != 0
GROUP BY countries.entity
ORDER BY AVG(Number_rabies) DESC
LIMIT 10

-- Task 4
WITH date_data AS (
    SELECT 
        STR_TO_DATE(CONCAT(Year, '-01-01'), '%Y-%m-%d') AS history_date,
        CURDATE() AS today_date
    FROM infectious_cases
)
SELECT 
    history_date,
    today_date,
    TIMESTAMPDIFF(YEAR, history_date, today_date) AS year_diff
FROM date_data;

-- Task 5
DROP FUNCTION IF EXISTS YearDiff;

DELIMITER //

CREATE FUNCTION YearDiff(input_year TEXT)
RETURNS INT
DETERMINISTIC 
NO SQL
BEGIN
	DECLARE result INT;
    SET result = TIMESTAMPDIFF(
        YEAR,
        STR_TO_DATE(CONCAT(input_year, '-01-01'), '%Y-%m-%d'),
        CURDATE()
    );
    
    RETURN result;
END //

DELIMITER ;

SELECT 
    Year,
    YearDiff(Year) AS year_difference
FROM infectious_cases;